[tool.poetry]
name = "gcloud-pydantix"
version = "0.1.0"
description = "AsyncIO Google Cloud Client Library using Pydantic and HTTPX"
authors = ["Emin Mastizada <emin@linux.com>"]
license = "MIT"
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Framework :: Pydantic",
    "Framework :: FastAPI",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet",
]
readme = "README.md"

packages = [
    { include = "gcloud" }
]

[tool.poetry.urls]
Homepage = "https://github.com/mastizada/gcloud-pydantix"
Documentation = "https://github.com/mastizada/gcloud-pydantix"
Source = "https://github.com/mastizada/gcloud-pydantix"
Changelog = "https://github.com/mastizada/gcloud-pydantix/blob/main/CHANGELOG.md"

[tool.poetry.dependencies]
python = "^3.10"
pydantic = ">=2.0"
httpx = {extras = ["http2"], version = ">=0.22"}
orjson = ">=3.6"
PyJWT = ">=2.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=8"
pytest-asyncio = ">=0.23"
pre-commit = ">=3"
ruff = ">=0.4"
respx = ">=0.21"

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
# Ruff rules: https://docs.astral.sh/ruff/rules/
select = ["ALL"]
ignore = [
    "ANN101", "ANN201", "ANN202", "ANN204", "COM812", "D100", "D101", "D102", "D103", "D104",
    "D107", "D203", "D212", "D401", "D417", "DTZ001", "EM101", "EM102", "ERA001", "FBT001", "FIX002", "G004",
    "ISC001", "PGH003", "PLR0913", "S101", "TRY003", "TD002", "TD003", "TD004",
]
unfixable = ["C408"]

[tool.ruff.lint.per-file-ignores]
# async fixtures might be mistaken as unused in tests
"tests/**.py" = ["ARG001"]

[tool.mypy]
python_version = "3.10"
strict = false
disallow_untyped_defs = false
disallow_subclassing_any = false
show_error_codes = true
show_error_context = true
ignore_missing_imports = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
